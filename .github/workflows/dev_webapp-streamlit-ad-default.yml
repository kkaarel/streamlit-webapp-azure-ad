# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - WEBAPP-streamlit-ad-default

on:
  push:
    branches:
      - dev
    paths:
      - streamlit
      - '.github/**'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          pip install -r $GITHUB_WORKSPACE/streamlit/requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Generate secrets.tonl file
        run: |
          echo "[connections.snowpark]                               
          account = $(echo -e \"${{ secrets.SNOWFLAKE_ACCOUNT }}\")
          user = $(echo -e \"${{ secrets.SNOWFLAKE_USER }}\")
          password = $(echo -e \"${{ secrets.SNOWFLAKE_PASSWORD }}\")
          role = $(echo -e \"${{ secrets.SNOWFLAKE_ROLE_DEV }}\")
          warehouse = $(echo -e \"${{ secrets.SNOWFLAKE_WAREHOUSE_DEV }}\")
          database = $(echo -e \"${{ secrets.SNOWFLAKE_DATABASE_DEV }}\")
          schema = $(echo -e \"${{ secrets.SNOWFLAKE_SCHEMA_DEV }}\")
          client_session_keep_alive = true" >> $GITHUB_WORKSPACE/streamlit/.streamlit/secrets.toml
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            ./streamlit 
            !venv/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2


          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'WEBAPP-streamlit-adintegration'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_910D0F855D5F45209C55E94FA278FC07 }}
